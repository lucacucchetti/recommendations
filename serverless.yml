service: recommendations

custom:
  tableName: 'recommendations-table-${self:provider.stage}'
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
  customDomain:
    domainName: 'cucchetti.link'
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  serverless-offline:
    noPrependStageInUrl: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { 'Fn::GetAtt': ['RecommendationsDynamoDBTable', 'Arn'] }
  environment:
    RECOMMENDATIONS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http:
          path: /recommendations
          method: get
      - http:
          path: /recommendations/create
          method: post
      - http:
          path: /recommendations/delete
          method: post

resources:
  Resources:
    RecommendationsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-domain-manager
